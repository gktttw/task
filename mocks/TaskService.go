// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// TaskService is an autogenerated mock type for the TaskService type
type TaskService struct {
	mock.Mock
}

// CreateTask provides a mock function with given fields: c
func (_m *TaskService) CreateTask(c *gin.Context) {
	_m.Called(c)
}

// DeleteTask provides a mock function with given fields: c
func (_m *TaskService) DeleteTask(c *gin.Context) {
	_m.Called(c)
}

// GetAllTask provides a mock function with given fields: c
func (_m *TaskService) GetAllTask(c *gin.Context) {
	_m.Called(c)
}

// UpdateTask provides a mock function with given fields: c
func (_m *TaskService) UpdateTask(c *gin.Context) {
	_m.Called(c)
}

// NewTaskService creates a new instance of TaskService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTaskService(t interface {
	mock.TestingT
	Cleanup(func())
}) *TaskService {
	mock := &TaskService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
